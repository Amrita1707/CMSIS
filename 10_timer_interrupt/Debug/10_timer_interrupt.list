
10_timer_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000200  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a8  080003b0  000103b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a8  080003a8  000103b0  2**0
                  CONTENTS
  4 .ARM          00000000  080003a8  080003a8  000103b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a8  080003b0  000103b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003ac  080003ac  000103ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103b0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103b0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000088d  00000000  00000000  000103e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000018c  00000000  00000000  00010c6d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00010e00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000058  00000000  00000000  00010e70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000180bf  00000000  00000000  00010ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000597  00000000  00000000  00028f87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000880e4  00000000  00000000  0002951e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000b1602  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000fc  00000000  00000000  000b1654  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000390 	.word	0x08000390

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000390 	.word	0x08000390

080001e8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001f6:	2b00      	cmp	r3, #0
 80001f8:	db0b      	blt.n	8000212 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001fa:	79fb      	ldrb	r3, [r7, #7]
 80001fc:	f003 021f 	and.w	r2, r3, #31
 8000200:	4907      	ldr	r1, [pc, #28]	; (8000220 <__NVIC_EnableIRQ+0x38>)
 8000202:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000206:	095b      	lsrs	r3, r3, #5
 8000208:	2001      	movs	r0, #1
 800020a:	fa00 f202 	lsl.w	r2, r0, r2
 800020e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000212:	bf00      	nop
 8000214:	370c      	adds	r7, #12
 8000216:	46bd      	mov	sp, r7
 8000218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800021c:	4770      	bx	lr
 800021e:	bf00      	nop
 8000220:	e000e100 	.word	0xe000e100

08000224 <main>:
void timer_config();
void gpio_config();
int count =0;

int main()
{
 8000224:	b580      	push	{r7, lr}
 8000226:	af00      	add	r7, sp, #0
   clk_config();
 8000228:	f000 f808 	bl	800023c <clk_config>
   gpio_config();
 800022c:	f000 f81c 	bl	8000268 <gpio_config>
   timer_config();
 8000230:	f000 f82a 	bl	8000288 <timer_config>
 8000234:	2300      	movs	r3, #0
}
 8000236:	4618      	mov	r0, r3
 8000238:	bd80      	pop	{r7, pc}
	...

0800023c <clk_config>:

void clk_config()
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	// TIM7 clock enabled
	RCC->APB1ENR |= RCC_APB1ENR_TIM7EN;
 8000240:	4b08      	ldr	r3, [pc, #32]	; (8000264 <clk_config+0x28>)
 8000242:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000244:	4a07      	ldr	r2, [pc, #28]	; (8000264 <clk_config+0x28>)
 8000246:	f043 0320 	orr.w	r3, r3, #32
 800024a:	6413      	str	r3, [r2, #64]	; 0x40

	// Enable clock for GPIOD
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 800024c:	4b05      	ldr	r3, [pc, #20]	; (8000264 <clk_config+0x28>)
 800024e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000250:	4a04      	ldr	r2, [pc, #16]	; (8000264 <clk_config+0x28>)
 8000252:	f043 0308 	orr.w	r3, r3, #8
 8000256:	6313      	str	r3, [r2, #48]	; 0x30

}
 8000258:	bf00      	nop
 800025a:	46bd      	mov	sp, r7
 800025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	40023800 	.word	0x40023800

08000268 <gpio_config>:

void gpio_config()
{
 8000268:	b480      	push	{r7}
 800026a:	af00      	add	r7, sp, #0
	// Set GPIOD Pin 12 as output
    GPIOD->MODER |=  GPIO_MODER_MODE12_0;
 800026c:	4b05      	ldr	r3, [pc, #20]	; (8000284 <gpio_config+0x1c>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	4a04      	ldr	r2, [pc, #16]	; (8000284 <gpio_config+0x1c>)
 8000272:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000276:	6013      	str	r3, [r2, #0]
}
 8000278:	bf00      	nop
 800027a:	46bd      	mov	sp, r7
 800027c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000280:	4770      	bx	lr
 8000282:	bf00      	nop
 8000284:	40020c00 	.word	0x40020c00

08000288 <timer_config>:

void timer_config()
{
 8000288:	b580      	push	{r7, lr}
 800028a:	af00      	add	r7, sp, #0

	//Counter value
	TIM7->CNT = 0;
 800028c:	4b0d      	ldr	r3, [pc, #52]	; (80002c4 <timer_config+0x3c>)
 800028e:	2200      	movs	r2, #0
 8000290:	625a      	str	r2, [r3, #36]	; 0x24

	// Auto-reload value
	TIM7->ARR = 16000;
 8000292:	4b0c      	ldr	r3, [pc, #48]	; (80002c4 <timer_config+0x3c>)
 8000294:	f44f 527a 	mov.w	r2, #16000	; 0x3e80
 8000298:	62da      	str	r2, [r3, #44]	; 0x2c

	//Update interrupt enabled
	TIM7->DIER |= TIM_DIER_UIE;
 800029a:	4b0a      	ldr	r3, [pc, #40]	; (80002c4 <timer_config+0x3c>)
 800029c:	68db      	ldr	r3, [r3, #12]
 800029e:	4a09      	ldr	r2, [pc, #36]	; (80002c4 <timer_config+0x3c>)
 80002a0:	f043 0301 	orr.w	r3, r3, #1
 80002a4:	60d3      	str	r3, [r2, #12]

	//Prescaler value as 1000
	TIM7->PSC = 1000;
 80002a6:	4b07      	ldr	r3, [pc, #28]	; (80002c4 <timer_config+0x3c>)
 80002a8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80002ac:	629a      	str	r2, [r3, #40]	; 0x28

	//Enable Timer7 IRQ
	NVIC_EnableIRQ(TIM7_IRQn);
 80002ae:	2037      	movs	r0, #55	; 0x37
 80002b0:	f7ff ff9a 	bl	80001e8 <__NVIC_EnableIRQ>

	//Counter enabled
	TIM7->CR1 |= TIM_CR1_CEN;
 80002b4:	4b03      	ldr	r3, [pc, #12]	; (80002c4 <timer_config+0x3c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a02      	ldr	r2, [pc, #8]	; (80002c4 <timer_config+0x3c>)
 80002ba:	f043 0301 	orr.w	r3, r3, #1
 80002be:	6013      	str	r3, [r2, #0]
}
 80002c0:	bf00      	nop
 80002c2:	bd80      	pop	{r7, pc}
 80002c4:	40001400 	.word	0x40001400

080002c8 <TIM7_IRQHandler>:

void TIM7_IRQHandler()
{
 80002c8:	b480      	push	{r7}
 80002ca:	af00      	add	r7, sp, #0
	//clear the UIF bit of the TIM7 status register
	TIM7->SR &= 0;
 80002cc:	4b07      	ldr	r3, [pc, #28]	; (80002ec <TIM7_IRQHandler+0x24>)
 80002ce:	691b      	ldr	r3, [r3, #16]
 80002d0:	4b06      	ldr	r3, [pc, #24]	; (80002ec <TIM7_IRQHandler+0x24>)
 80002d2:	2200      	movs	r2, #0
 80002d4:	611a      	str	r2, [r3, #16]

	// Toggle GPIOD Pin 12 (LED) for every 1seconds
	GPIOD->ODR ^= GPIO_ODR_OD12;
 80002d6:	4b06      	ldr	r3, [pc, #24]	; (80002f0 <TIM7_IRQHandler+0x28>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	4a05      	ldr	r2, [pc, #20]	; (80002f0 <TIM7_IRQHandler+0x28>)
 80002dc:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80002e0:	6153      	str	r3, [r2, #20]
}
 80002e2:	bf00      	nop
 80002e4:	46bd      	mov	sp, r7
 80002e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ea:	4770      	bx	lr
 80002ec:	40001400 	.word	0x40001400
 80002f0:	40020c00 	.word	0x40020c00

080002f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f4:	480d      	ldr	r0, [pc, #52]	; (800032c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002fc:	480c      	ldr	r0, [pc, #48]	; (8000330 <LoopForever+0x6>)
  ldr r1, =_edata
 80002fe:	490d      	ldr	r1, [pc, #52]	; (8000334 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000300:	4a0d      	ldr	r2, [pc, #52]	; (8000338 <LoopForever+0xe>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000304:	e002      	b.n	800030c <LoopCopyDataInit>

08000306 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000306:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000308:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800030a:	3304      	adds	r3, #4

0800030c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800030c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000310:	d3f9      	bcc.n	8000306 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000312:	4a0a      	ldr	r2, [pc, #40]	; (800033c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000314:	4c0a      	ldr	r4, [pc, #40]	; (8000340 <LoopForever+0x16>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000318:	e001      	b.n	800031e <LoopFillZerobss>

0800031a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800031a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800031c:	3204      	adds	r2, #4

0800031e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000320:	d3fb      	bcc.n	800031a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000322:	f000 f811 	bl	8000348 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000326:	f7ff ff7d 	bl	8000224 <main>

0800032a <LoopForever>:

LoopForever:
  b LoopForever
 800032a:	e7fe      	b.n	800032a <LoopForever>
  ldr   r0, =_estack
 800032c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000330:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000334:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000338:	080003b0 	.word	0x080003b0
  ldr r2, =_sbss
 800033c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000340:	2000001c 	.word	0x2000001c

08000344 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000344:	e7fe      	b.n	8000344 <ADC_IRQHandler>
	...

08000348 <__libc_init_array>:
 8000348:	b570      	push	{r4, r5, r6, lr}
 800034a:	4d0d      	ldr	r5, [pc, #52]	; (8000380 <__libc_init_array+0x38>)
 800034c:	4c0d      	ldr	r4, [pc, #52]	; (8000384 <__libc_init_array+0x3c>)
 800034e:	1b64      	subs	r4, r4, r5
 8000350:	10a4      	asrs	r4, r4, #2
 8000352:	2600      	movs	r6, #0
 8000354:	42a6      	cmp	r6, r4
 8000356:	d109      	bne.n	800036c <__libc_init_array+0x24>
 8000358:	4d0b      	ldr	r5, [pc, #44]	; (8000388 <__libc_init_array+0x40>)
 800035a:	4c0c      	ldr	r4, [pc, #48]	; (800038c <__libc_init_array+0x44>)
 800035c:	f000 f818 	bl	8000390 <_init>
 8000360:	1b64      	subs	r4, r4, r5
 8000362:	10a4      	asrs	r4, r4, #2
 8000364:	2600      	movs	r6, #0
 8000366:	42a6      	cmp	r6, r4
 8000368:	d105      	bne.n	8000376 <__libc_init_array+0x2e>
 800036a:	bd70      	pop	{r4, r5, r6, pc}
 800036c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000370:	4798      	blx	r3
 8000372:	3601      	adds	r6, #1
 8000374:	e7ee      	b.n	8000354 <__libc_init_array+0xc>
 8000376:	f855 3b04 	ldr.w	r3, [r5], #4
 800037a:	4798      	blx	r3
 800037c:	3601      	adds	r6, #1
 800037e:	e7f2      	b.n	8000366 <__libc_init_array+0x1e>
 8000380:	080003a8 	.word	0x080003a8
 8000384:	080003a8 	.word	0x080003a8
 8000388:	080003a8 	.word	0x080003a8
 800038c:	080003ac 	.word	0x080003ac

08000390 <_init>:
 8000390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000392:	bf00      	nop
 8000394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000396:	bc08      	pop	{r3}
 8000398:	469e      	mov	lr, r3
 800039a:	4770      	bx	lr

0800039c <_fini>:
 800039c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039e:	bf00      	nop
 80003a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a2:	bc08      	pop	{r3}
 80003a4:	469e      	mov	lr, r3
 80003a6:	4770      	bx	lr
